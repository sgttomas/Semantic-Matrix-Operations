NORMATIVE Chirality Framework 13.2
# PHASE 1 OF THE IMPLEMENTATION OF THE CHIRALITY FRAMEWORK

## What is the Chirality Framework?
The Chirality Framework is a meta-ontological, system-agnostic methodology for mapping the solution space to a problem statement in the context of knowledge work. 
## What is it used for?
Put simply, this framework generates a coherent set of semantic relationships as a conceptual map along the problem solving process.  It is NOT used for generating reliable knowledge.  It is an abstraction of the problem solving process for knowledge work.  In it are components that have ontological and semantic relationships.  That meaningful structuring of relationships across the problem solving process provides semantic structure for mapping knowledge to solutions.
It is NOT used for the mapping of knowledge to solutions, it provides the structure for which a mapping process could be made more effective.

It is used to create a structured set of semantic relationships that have coherent meaning across the problem solving process and can be used as “semantic anchors” to guide an LLM across stages of solving a problem, traversing a “semantic valley”. 
## Your Role as the LLM within the Chirality Framework

Clearly show how the elements transform according to the instructions.  There is a time to combine together statements precisely according to a strict procedure, and a time to interpret those statements within a given context. 
### Semantic Dot Product

Define matrices [A], [B], and [C] to have this relationship:

[A] * [B] = [C]

￼￼￼[A(1,1) * B(1,1) + A(1,2) * B(2,1) + A(1,3) * B(3,1) + A(1,3) * B(4,1)]
[A(1,1) * B(1,2) + A(1,2) * B(2,2) + A(1,3) * B(3,2) + A(1,3) * B(4,2)]
[A(1,1) * B(1,3) + A(1,2) * B(2,3) + A(1,3) * B(3,3) + A(1,3) * B(4,3)]
[A(1,1) * B(1,4) + A(1,2) * B(2,4) + A(1,3) * B(3,4) + A(2,3) * B(4,4)]
] 

[A(2,1) * B(1,1) + A(2,2) * B(2,1) + A(2,3) * B(3,1) + A(2,3) * B(4,1)]
￼[A(2,1) * B(1,3) + A(2,2) * B(2,3) + A(2,3) * B(3,3) + A(2,3) * B(4,3)]
[A(2,1) * B(1,4) + A(2,2) * B(2,4) + A(2,3) * B(3,4) + A(2,3) * B(4,4)]
]

[
[A(3,1) * B(1,1) + A(3,2) * B(2,1) + A(3,3) * B(3,1) + A(3,3) * B(4,1)]
[A(3,1) * B(1,2) + A(3,2) * B(2,2) + A(3,3) * B(3,2) + A(3,3) * B(4,2)]
[A(3,1) * B(1,3) + A(3,2) * B(2,3) + A(3,3) * B(3,3) + A(3,3) * B(4,3)]
[A(3,1) * B(1,4) + A(3,2) * B(2,4) + A(3,3) * B(3,4) + A(3,3) * B(4,4)]
]

To provide an interpretation of these semantic dot product operators use the following definitions. 

## Semantic Multiplication “ * “

Semantic multiplication (denoted by * ) means the semantics of the terms are resolved by combining the meaning of words into a coherent word or statement that represents the semantic intersection of those words (the meaning when combined together, not just adjoining the terms). This can even be done when the concept is a highly abstract word pairing because you are an LLM.

Examples:
"sufficient" * "reason" = "justification"
“analysis” * “judgment” = “informed decision”
"precision" * "durability" = "reliability"
"probability" * "consequence" = "risk"

## Semantic Addition “ + “

Semantic addition (denoted by + ) means simply concatenating words or sentence fragments together to form a longer statement. 
Example:
"faisal" + "has" + "seven" + "balloons" = faisal has seven balloons

## Order of Operations

First is ‘semantic multiplication’, second is ‘semantic addition’.

## Map of meaning 

The Chirality Framework follows a  logical progression of stations along the path to generating reliable knowledge.

1. [A], [B] -> Problem Statement
2. [A] * [B] = [C] -> Problem Requirements
3. [A] + [F] = [D] -> Solution Objectives
4. [K] * [J] = [X] -> Verification
5. [X] ->  [Z] -> Validation
6. [G] * [T] = [E]  -> Evaluation
7. [R] x [E] = [M] -> Assessment
8. [M] x [X] = [W] -> Implementation
9. [W] x [P] = [U] -> Reflection
10. [U] x [H] = [N] -> Resolution

Digest this information and then I will proceed with instructions.

*******************************

## Starting Axioms

I'm going to define some matrices that are used as ontologies for the problem solving space in knowledge work.  A semantic matrix applies modal ontologies to rows and columns, and the intersections all reflect the combined meaning of those two modalities.  Then the elements of a semantic matrix as situated in their respective ontology and instantiated in a particular subject.

To begin with, here are the axiomatic matrices that define the meta-ontology.

Recall our map of meaning along the semantic valley: If problem statement, then requirements, then objectives, then verification, then validation, then evaluation, then assessment, then implementation, then reflection and resolution.

## Matrix A 
[A]
Size: 3x4
Station: Problem statement
Column names: [‘Guidance’, ‘Application’, ‘Decision’, ‘Review’]
Row names: [‘Normative’, ‘Operative’, ‘Evaluative’]
Elements: [
[‘Values‘, ‘Actions’, ‘Benchmarks’, ‘Feedback’]
[‘Standards’, ‘Methods’, ‘Judgment’, ‘Adaptation’]
[‘Objectives’, ‘Coordination’, ‘Evaluation’, ‘Refinement’]
]

## Matrix B
[B]
Size: 4x4
Station: N/A this is the Decisions matrix
Column names: [‘Essentiality’, ‘Sufficiency’, ‘Completeness’, ‘Consistency’]
Row names: [‘Data’, ‘Information’, Knowledge’, ‘Wisdom’]
Elements: [
[‘Essential’, ‘Sufficient’, ‘Complete’, ‘Consistent’]
[‘Relevant’, ‘Actionable’, ‘Contextual’, ‘Congruent’ ]
[ ‘Fundamental’, ‘Effective’, ‘Systematic’, ‘Coherent’ ]
[‘Vital’, ‘Optimal’ , ‘Holistic’, ‘Principled’ ]
]

## Matrix C 
[C]
Size: 3x4
Station: Requirements
Column names: [‘Determinacy’, ‘Sufficiency’, ‘Completeness’, ‘Consistency’]
Row names: [‘Normative’, ‘Operative’, ‘Evaluative’]

## Semantic Matrix Operations Conclusion

[A] * [B] = [C]

Generate Matrix C first with the purely combinatorial first step of joining the elements of [A] and [B] in this manner: 

[C] = [
[A(1,1) * B(1,1) + A(1,2) * B(2,1) + A(1,3) * B(3,1) + A(1,3) * B(4,1)]
[A(1,1) * B(1,2) + A(1,2) * B(2,2) + A(1,3) * B(3,2) + A(1,3) * B(4,2)]
[A(1,1) * B(1,3) + A(1,2) * B(2,3) + A(1,3) * B(3,3) + A(1,3) * B(4,3)]
[A(1,1) * B(1,4) + A(1,2) * B(2,4) + A(1,3) * B(3,4) + A(2,3) * B(4,4)]
] 

[A(2,1) * B(1,1) + A(2,2) * B(2,1) + A(2,3) * B(3,1) + A(2,3) * B(4,1)]
[A(2,1) * B(1,2) + A(2,2) * B(2,2) + A(2,3) * B(3,2) + A(2,3) * B(4,2)]
[A(2,1) * B(1,3) + A(2,2) * B(2,3) + A(2,3) * B(3,3) + A(2,3) * B(4,3)]
[A(2,1) * B(1,4) + A(2,2) * B(2,4) + A(2,3) * B(3,4) + A(2,3) * B(4,4)]
]

[
[A(3,1) * B(1,1) + A(3,2) * B(2,1) + A(3,3) * B(3,1) + A(3,3) * B(4,1)]
[A(3,1) * B(1,2) + A(3,2) * B(2,2) + A(3,3) * B(3,2) + A(3,3) * B(4,2)]
[A(3,1) * B(1,3) + A(3,2) * B(2,3) + A(3,3) * B(3,3) + A(3,3) * B(4,3)]
[A(3,1) * B(1,4) + A(3,2) * B(2,4) + A(3,3) * B(3,4) + A(3,3) * B(4,4)]
]

After that i will give you instructions to complete the semantic interpretation.

*******************

### Interpreting the elements of Matrix C, Step 1


Recall to provide an interpretation of these semantic dot product operators use the following definitions. 

## Semantic Multiplication “ * “
Semantic multiplication (denoted by * ) means the semantics of the terms are resolved by combining the meaning of words into a coherent word or statement that represents the semantic intersection of those words (the meaning when combined together, not just adjoining the terms). This can even be done when the concept is a highly abstract word pairing because you are an LLM.

Examples:
"sufficient" * "reason" = "justification"
“analysis” * “judgment” = “informed decision”
"precision" * "durability" = "reliability"
"probability" * "consequence" = "risk"

## Semantic Addition “ + “

Semantic addition (denoted by + ) means simply concatenating words or sentence fragments together to form a longer statement. 
Example:
"faisal" + "has" + "seven" + "balloons" = faisal has seven balloons

## Order of Operations

To resolve a meaning in [C] follow this order of operations:

1. Apply semantic multiplication first, 
2. then semantic addition   
Generate this iteration of [C]

*********************

### Interpreting the elements of Matrix C, Step 2

Now first interpret each element through the lens of the meaning of the corresponding column ontology (name).
Then interpret each element through the lens of the meaning of the corresponding row ontology (name)

*******************

## Matrix J
 [J]
Size: 3x4
Column names: [‘Determinacy’, ‘Sufficiency’, ‘Completeness’, ‘Consistency’]
Row names: [‘Data’, ‘Information’, ‘Knowledge’]
Elements:

[J] is a truncated form of Matrix B.  The final row ‘Wisdom’ has been removed.

Generate [J]

*******************

## Matrix F
 [F]
Size: 3x4
Column names: [‘Determinacy’, ‘Sufficiency’, ‘Completeness’, ‘Consistency’]
Row names: [‘Data’, ‘Information’, ‘Knowledge’]
Elements:

[J] * [C] = [F]

Generate Matrix J first with the purely combinatorial first step of joining the elements of [J] and [C].

*******************

### Interpreting the elements of Matrix F, Step 1

Recall to provide an interpretation of these semantic dot product operators use the following definitions. 

## Semantic Multiplication “ * “
Semantic multiplication (denoted by * ) means the semantics of the terms are resolved by combining the meaning of words into a coherent word or statement that represents the semantic intersection of those words (the meaning when combined together, not just adjoining the terms). This can even be done when the concept is a highly abstract word pairing because you are an LLM.

Examples:
"sufficient" * "reason" = "justification"
“analysis” * “judgment” = “informed decision”
"precision" * "durability" = "reliability"
"probability" * "consequence" = "risk"

## Semantic Addition “ + “

Semantic addition (denoted by + ) means simply concatenating words or sentence fragments together to form a longer statement. 
Example:
"faisal" + "has" + "seven" + "balloons" = faisal has seven balloons

## Order of Operations
￼To resolve a meaning in [F] follow this order of operations:

1. Apply semantic multiplication first, 
2. then semantic addition   
Generate this iteration of [F]

*********************

### Interpreting the elements of Matrix F, Step 2

Now first interpret each element through the lens of the meaning of the corresponding column ontology (name).
Then interpret each element through the lens of the meaning of the corresponding row ontology (name)

*******************

## Matrix D

[D]
Size: 3x4
Column names: ['Guidance', 'Application', 'Decision', 'Review']
Row names: ['Normative', 'Operative’, 'Evaluative']

### Construction of [D]

The elements of Matrix D, denoted as D(i,j), are generated as follows:
For each row i (1 to 3) and each column j (1 to 4):
D(i,j) = A(i,j) + " applied to frame the problem of generating reliable knowledge and “ + F(i,j) + " to resolve the problem.”

### Organization of [D]

Write out the sentences from (1,1) to (3,4) row by column.    Use this as the prefix to the sentence: 
(‘row name’, ‘column name’): ***put the combinatorial sentence construction here***

After that i will give you instructions to complete the semantic interpretation of the whole sentence.

******************

### Interpreting the elements of Matrix D, Step 1

Now interpret each element through the lens of the meaning of the corresponding column ontology (name).
Then interpret each element through the lens of the meaning of the corresponding row ontology (name)

*******************

## Matrix K 
[K]
Size: 4x3
Station: N/A this is a form of the objectives from Matrix D to be verification
Column names: ['Normative', 'Operative’, 'Evaluative’]
Row names: ['Guidance', 'Application', 'Decision', 'Review']

Matrix K is the transpose of Matrix D.  The semantic operations for transposing a matrix work identically to a mathematical transposing.  Each element is swapped column for row.

Generate [K]

*********************************

Recall our map of meaning along the semantic valley: If problem statement, then requirements, then objectives, then verification, then validation, then evaluation, then assessment, then implementation, then reflection and resolution.

## Matrix X 
[X]
Size: 4x4
Station: Verification
Column names: [‘Determinacy’, ‘Sufficiency’, ‘Completeness’, ‘Consistency’]
Row names: [‘Guidance’, ‘Application’, Decision’, 'Review'] 

[K] * [J] = [X]

### Constructing [X]

Generate [X] first with the purely combinatorial first step of semantic matrix operations which is to recombine the elements using the dot product sequence. 

after that i will give you instructions to complete the semantic interpretation.

### Organizing [X]

Write out the sentences fully, do not abbreviate or leave any part out.

Write out the full sentence in a hierarchical list.   

Use this as the prefix to the sentence:   X(i,j) (row name, column name): “put the sentence construction here” .

After that i will give you instructions to complete the semantic interpretation of the whole sentence.

*******************

### Interpreting the elements of Matrix X

Now interpret each element through the lens of the meaning of the corresponding column ontology (name).
Then interpret each element through the lens of the meaning of the corresponding row ontology (name)

*********************

Recall our map of meaning along the semantic valley: If problem statement, then requirements, then objectives, then verification, then validation, then evaluation, then assessment, then implementation, then reflection and resolution.

## Matrix Z
[Z]
Size: 4x4
Station: Validation
Column names: [‘Determinacy’, ‘Sufficiency’, ‘Completeness’, ‘Consistency’]
Row names: [‘Guidance’, ‘Application’, Decision’, 'Review'] 

Now to generate Matrix Z, for each element of Matrix X shift the meaning from the verification context into the validation context.  

Generate [Z]

*********************

## Matrix G
[G]
Size: 3x4
Column names: [‘Determinacy’, ‘Sufficiency’, ‘Completeness’, ‘Consistency’]
￼￼￼￼Row names: [‘Guidance’, ‘Application’, Decision’] 

To construct [G] use only the top three rows of [Z] (‘Guidance’, ‘Application’, Decision’).  This will be a 3 x 4 matrix.  You will call this Matrix G, or [G] when used in semantic operations.  

Generate [G]

## Array P
[P]
Size: 1x4
Column names: [‘Determinacy’, ‘Sufficiency’, ‘Completeness’, ‘Consistency’]
Row name: [‘Review']

To construct [P] extract the fourth row (‘Review’) of this iteration of [Z].  This will be a 1x4 array used later on.  

Generate [P] now.

## Matrix T
[T]
Size: 4x3
Column names: [‘Data’, ‘Information’, Knowledge’]
Row names: [‘Determinacy’, ‘Sufficiency’, ‘Completeness’, ‘Consistency’]

Matrix T is the transpose of Matrix J.  As before, transpose means the same as normal matrix operations and is simply swapping rows for columns.

Generate [T]

***************************

Recall our map of meaning along the semantic valley: If problem statement, then requirements, then objectives, then verification, then validation, then evaluation, then assessment, then implementation, then instantiation, then reflection and resolution.

## Matrix E
[E]
Size: 3x3
Column names: ['Data', 'Information', 'Knowledge']
Row names: [‘Guidance’, ‘Application’, Decision’] 

[G] * [T] = [E]

Generate the purely translational first step of semantic dot product matrix operations for [E]

*******************

### Interpreting the elements of Matrix E

Now interpret each element through the lens of the meaning of the corresponding column ontology (name).
Then interpret each element through the lens of the meaning of the corresponding row ontology (name)

******************************************

# IMPLEMENTATION PHASE 2

## New Semantic Operations:
Clearly show how the elements transform step by step, according to the instructions, and utilizing your LLM powers generate coherent resolutions according to the context provided.

### Semantic Cross Product

Denoted as “ x "

For example: [U] x [H]

The name "semantic cross product" is not at all derived from the similarly named mathematical operation.  Rather this will create a higher dimensional semantic tensor.  A ‘semantic cross product’ works by generating a hierarchy of meaning, by expanding the elements of one component by each of the elements of the other.  The dimensions and order of operations are given below whenever this operation is performed.

## Concluding Axioms
There will be additional axioms introduced below when needed.

We have previously progressed the implementation up to the ‘Assessment’ station in the form of a semantic matrix called [Q].  That completes the portion of cognitive processing to generate the necessary categories and semantics for the next phase of generating reliable knowledge.  It is sufficient now for you to take that Matrix Q and follow the instructions provided below. 

## Axiom
I will define a new axiomatic array whose elements comprise the categories for a ‘deliverable’, within the context of knowledge work.  A deliverable is a discrete way of documenting knowledge.  It is a more general term than documentation.   

## Array R
[R]
Size: 1x9
Subject: generating valid knowledge
Elements: [
1. Problem Statement 
2. Requirements
3. Objectives
4. Methodology
5. Analysis 
6. Evaluation
7. Assessment
8. Implementation
9. Integration
]

Generate [R]

digest this information and wait for instructions.

*********************

Recall our map of meaning along the semantic valley: If problem statement, then requirements,  then objectives, then output, then verification, then validation, then evaluation, then assessment, then implementation, then instantiation, then reflection and resolution.

## Tensor M
[M]
Size: 9x3x3

[R] x [E] = [M] 

Tensor M will take the evaluation principles from Matrix E and apply them to the topics in Array R in the context of the subject of R.  The subject of R is "generating valid knowledge".  So the topics in Array R are the topics in the subject of generating valid knowledge.

## Construction of [M]

Use the elements in [R] (subject, topic) as the semantic starting point, or the seed of thought that will be explored by the perspective of the elements of [E]

### Organizing [M]

Group the elements of [M] as a hierarchical list:

1. Topics from [R]. 
2. Perspectives from [E].  IMPORTANT: USE THIS ONTOLOGY AS THE FRAMING FOR THE ELEMENT, NESTED AS FOLLOWS:
    1. ['Data', 'Information', 'Knowledge']
    2. [‘Guidance’, ‘Application’, Decision’] 

Because of the hierarchical nature of how Tensor M can be represented, we only need to generate one topic and all the nested elements to validate the methodology of the Chirality Framework at the Normative level.   
Generate the elements for topic number 3 of [M] 

**************************************  

## Interpreting the elements of [M]

Interpret the elements according to its ontological location.    

First, consider the topic
Second, interpret according to the corresponding aspect of this modality  ['Data', 'Information', 'Knowledge']
Third, interpret according to the corresponding aspect of this modality  [‘Guidance’, ‘Application’, Decision’]   

**************************************

Recall our map of meaning as we progress through the framework: If problem, then requirements,  then objectives, then output, then verification, then validation, then evaluation, then assessment, then implementation, then instantiation, then reflection and resolution.

## Tensor W
[W]
Size: 9x3x3x4x4

[M] x [X] = [W]

## Construction of [W]

Use the elements in [M] as the semantic starting point, or the seed of thought that will be explored by the perspective of the elements of [X]

## Organizing [W]

Group the elements of [W] as a hierarchical list.

Because of the hierarchical nature of Tensor W we easily generate a subset of elements that represents the overall structure.  Since we only generated Topic 3 for [M] we must start with that and then only generate ‘Information’ and ‘Application’ and then all the nested elements below that branch.

1. Topics from [R]
2.  Elements of [W]  IMPORTANT: USE THIS ONTOLOGY AS THE FRAMING FOR THE ELEMENT, NESTED AS FOLLOWS:
    2.1.  [‘Information']
    2.2. [‘Application’] 
    2.3. [‘Determinacy’, ‘Sufficiency’, ‘Completeness’, ‘Consistency’]
    2.4. [‘Guidance’, ‘Application’, Decision’, 'Review'] 

Generate the partial [W] 

**************************************

## Interpreting the elements of [W]

Interpret the elements according to its ontological location.    

First, consider the topic
Second, interpret according to this modality ['Information'] (because we only generated along this branch)
Third, interpret according to this modality [‘Application’] (because we only generated along this branch)
Fourth, interpret according to the corresponding aspect of this modality [‘Determinacy’, ‘Sufficiency’, ‘Completeness’, ‘Consistency’]
Fifth, interpret according to the corresponding aspect of this modality [‘Guidance’, ‘Application’, Decision’, 'Review'] 

**************************************

## Reproduce Array P from memory
[P]
Size: 1x4

Reproduce [P]

These are known as the ‘Validity Parameters’

******************************

Recall our map of meaning as we progress through the framework: If problem, then requirements,  then objectives, then output, then verification, then validation, then evaluation, then assessment, then implementation, then instantiation, then reflection and resolution.

## Tensor U
[U]
Size: 9x3x3x4x4x4

[W] x [P] = [U]

## Constructing [U]

Use the elements in [W] as the semantic starting point, or the seed of thought that will be explored by the perspective of the elements of [P]

## Organization of [U]

Group the elements of [U] as a hierarchical list.

Because of the hierarchical nature of Tensor U we easily generate a subset of elements that represents the overall structure.  Starting from the existing structure of [W] we will generate the nested elements only along this branch: 'Information' -> 'Application' -> 'Determinacy' -> 'Decision'

1. Topics from [R]
2. Elements of [U]  IMPORTANT: USE THIS ONTOLOGY AS THE FRAMING FOR THE ELEMENT, NESTED AS FOLLOWS:
    2.1.  [‘Information']
    2.2. [‘Application’] 
    2.3. [‘Determinacy’]
    2.4. [‘Decision’] 
3. Validity Parameters of [P]
	
Generate the partial [U] 

**************************************

## Interpreting the elements of [U]

First, consider the topic
Second, interpret according to this modality ['Information'] (because we only generated along this branch)
Third, interpret according to this modality [‘Application’] (because we only generated along this branch)
Fourth, interpret according to this modality [‘Determinacy’] (because we only generated along this branch)
Fifth, interpret according to this modality [‘Decision’] (because we only generated along this branch)
Sixth, interpret according to the corresponding aspect of this modality [‘Determinacy’, ‘Sufficiency’, ‘Completeness’, ‘Consistency’]
Seventh, interpret according to the final modality ['Review']

****************************************

## Array H
[H]
Size: 1x1

Array H is the element (1,4) from Array P.  

Generate [H]

******************************

Recall our map of meaning as we progress through the framework: If problem, then requirements,  then objectives, then output, then verification, then validation, then evaluation, then assessment, then implementation, then instantiation, then reflection and resolution.

The final step of the Chirality Framework.

## Tensor N
[N]
Size: 9x3x3x4x4x4

[U] x [H] = [N]

## Constructing [N]

Begin with the element in [U] as the seed of thought and then apply the consistency statement of [H].   

## Organization of [N]

Group the elements of [N] as a hierarchical list:

1. Topics from [R]
2. Elements of [U]  IMPORTANT: USE THIS ONTOLOGY AS THE FRAMING FOR THE ELEMENT, NESTED AS FOLLOWS:
    2.1. ['Data', 'Information', 'Knowledge']
    2.2. [‘Guidance’, ‘Application’, Decision’] 
    2.3. [‘Determinacy’, ‘Sufficiency’, ‘Completeness’, ‘Consistency’]
    2.4. [‘Guidance’, ‘Application’, Decision’, 'Review'] 
3. Validity Parameters from [P]
4. Decision Dialectic from [H]


For every element that was generated for [U] in the prior step, apply the consistency check from [H]

************************************

## What comprises Work

Work is comprised of deliverables and deliverables are accomplished through tasks.  Tasks are what comprise work.  

The work proceeds by tasks in these areas:

1. Problem Statement 
2. Requirements
3. Objectives
4. Verification
5. Validation 
6. Evaluation
7. Assessment
8. Implementation
9. Integration

## Source for Array R

The Array R represents the dimensions of work, called ‘deliverables’, that collectively will be sufficient to answer the problem statement.  
At the operative level when applied to a domain specific task with a problem statement that has tangible actions to be taken in generating knowledge, Array R can really be whatever string of Topics represents your needs.  Some schema of topics will work better than others.   You may want to generate a specific document with a certain table of contents, then arrange the Topics of [R] accordingly.

But when implementing the Chirality Framework at the normative level the problem statement is how to generate reliable knowledge of reliable knowledge generation.  Meta-self reference at its best.

